# -*- coding: utf-8 -*-
# Generated by Django 1.9.7 on 2016-06-30 08:30
from __future__ import unicode_literals

import altermeshfc.firmcreator.fields
import altermeshfc.firmcreator.models
import autoslug.fields
import datetime
from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='FwJob',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[(b'WAITING', 'waiting'), (b'STARTED', 'started'), (b'FINISHED', 'finished'), (b'FAILED', 'failed')], default=b'WAITING', max_length=10, verbose_name='satus')),
                ('job_data', altermeshfc.firmcreator.fields.JSONField(default=b'{}', verbose_name='job data')),
                ('build_log', models.TextField(blank=True, verbose_name='build log')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, editable=False, verbose_name='creation date')),
            ],
            options={
                'ordering': ['-pk'],
            },
            managers=[
                ('started', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='FwProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.SlugField(default=b'node', max_length=15, verbose_name='name')),
                ('slug', autoslug.fields.AutoSlugField(editable=False, populate_from=altermeshfc.firmcreator.models.fwprofile_get_slug, unique=True, verbose_name='slug')),
                ('description', models.TextField(verbose_name='description')),
                ('creation_date', models.DateTimeField(default=datetime.datetime.now, editable=False, verbose_name='creation date')),
                ('include_packages', models.TextField(blank=True, verbose_name='include packages')),
                ('include_files', altermeshfc.firmcreator.fields.JSONField(default=b'{}', verbose_name='include files')),
                ('openwrt_revision', models.CharField(max_length=50, verbose_name='openwrt revision')),
                ('devices', models.TextField(default=b'TLWDR4300', verbose_name='devices')),
                ('based_on', models.ForeignKey(blank=True, help_text='Create fw profile based on this profile. Leave it on default if you are not sure.', null=True, on_delete=django.db.models.deletion.SET_NULL, to='firmcreator.FwProfile', verbose_name='based on')),
            ],
            options={
                'ordering': ['network__name', 'name'],
                'verbose_name': 'firmware profile',
                'verbose_name_plural': 'firmware profiles',
            },
        ),
        migrations.CreateModel(
            name='Network',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='also acts as the default public ESSID. Eg: quintanalibre.org.ar', max_length=100, unique=True, verbose_name='name')),
                ('web', models.CharField(blank=True, max_length=200)),
                ('slug', autoslug.fields.AutoSlugField(blank=True, editable=False, populate_from=b'name', unique=True)),
                ('description', models.TextField(verbose_name='description')),
                ('latitude', models.FloatField(blank=True, null=True, verbose_name='GEO latitude')),
                ('longitude', models.FloatField(blank=True, null=True, verbose_name='GEO longitude')),
                ('admins', models.ManyToManyField(blank=True, related_name='network_admin_set', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, related_name='network_user_set', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['name'],
                'verbose_name': 'network',
                'verbose_name_plural': 'networks',
            },
        ),
        migrations.CreateModel(
            name='SSHKey',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=40, verbose_name='name')),
                ('key', altermeshfc.firmcreator.fields.PublicKeyField(verbose_name='ssh key')),
                ('auto_add', models.BooleanField(default=False, verbose_name='automaticaly add this key to my profiles')),
                ('user', models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user')),
            ],
            options={
                'verbose_name': 'SSH key',
                'verbose_name_plural': 'SSH keys',
            },
        ),
        migrations.AddField(
            model_name='fwprofile',
            name='network',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firmcreator.Network', verbose_name='network'),
        ),
        migrations.AddField(
            model_name='fwprofile',
            name='ssh_keys',
            field=models.ManyToManyField(blank=True, to='firmcreator.SSHKey', verbose_name=b'SSH keys'),
        ),
        migrations.AddField(
            model_name='fwjob',
            name='profile',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='firmcreator.FwProfile', verbose_name='profile'),
        ),
        migrations.AddField(
            model_name='fwjob',
            name='user',
            field=models.ForeignKey(editable=False, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL, verbose_name='user'),
        ),
        migrations.AlterUniqueTogether(
            name='fwprofile',
            unique_together=set([('network', 'name')]),
        ),
    ]
